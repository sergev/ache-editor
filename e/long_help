			 ВЫЗОВА РЕДАКТОРА

Формат вызова:
	   /usr/local/bin/le   [ <ключи> ]   [ <файлы> ]

Все указанные файлы помещаются в список активных файлов и оказываются
доступными для редактирования, а последний из них становится текущим.

Перед чтением ключей из командной строки, они читаются из переменной
окружения LEKEYS, которая представляет собой список ключей (включая
знак '-'), разделенных запятыми.

В командной строке при вызове редактора можно задавать следующие
ключи (их все можно сокращать до нескольких букв, пока не теряется
однозначность):

+<n>
<n> это номер строки в файле, которая будет текущей после запуска
редактора (см. документацию vi(1)).


+/<образец>/
<образец> это регулярное выражение, по которому будет произведен
поиск после запуска редактора
(см. документацию ed(1), vi(1)).


-binary
Переходи в двоичный режим редактирования текста (см. команду binary).
По умолчанию выключен.


-directory=<имя каталога>
По умолчанию редактор располагает свои временные файлы в каталоге
$HOME/.le, который сам создает при необходимости. Если нужно изменить
это умолчание (например, когда не хватает места на диске с домашним
каталогом), используется данный ключ.


-dtermcap
Принудительно использовать файл описаний termcap для работы с терминалом,
а не встроенный драйвер (если такой есть).
(см. документацию termcap(5)).


-help
Выдает все возможные ключи, их текущее значение и версию редактора.
Больше никаких действий не производится.


-inplace
При записи файлов сохранять ссылки (links) (см. команду inplace).
По умолчанию выключено.


-insmode
Перейти в режим вставки текста (см. команду insmode).
По умолчанию выключено.


-kbfile=<имя файла>
Имя файла в котором задается соответствие команд редактора нажимаемым
клавишам.
По умолчанию /usr/local/lib/e/stdkey.
Имя файла можно задать также, присвоив переменной
окружения LEKBFILE соответствующее значение.


-keyboard=<тип>
При использовании встроенного драйвера терминала (если он есть),
можно поменять тип клавиатуры.
По умолчанию standard (см. описание стандартной клавиатуры).
Тип клавиатуры можно задать также, присвоив переменной
окружения LEKBD соответствующее значение.


-noinsmode
Не переходить в режим вставки текста (см. команду -insmode).
По умолчанию включено.


-noofset
Не переходить в режим запоминания смещения предыдущей строки
(см. команду -offset).
По умолчанию выключено.


-norecover
По этому ключу сеанс редактирования начинается с чтения запомненного
состояния, а файл протокола, возможно оставшийся, если предыдущий
сеанс завершился неудачно, игнорируется, т.е. восстановления сеанса
не происходит.


-notracks
По этому ключу запомненное состояние и файл протокола, возможно
оставшийся, если предыдущий сеанс завершился неудачно, игнорируются,
т.е. восстановления состояния и сеанса не происходит.


-novistabs
Не отображать текущую разметку табуляций на нижней рамке текущего окна
(см. команду -vistabs).
По умолчанию выключено.


-offset
Перейти в режим запоминания смещения предыдущей строки
(см. команду offset).
По умолчанию включено.


-replay=<имя файла>
Использовать заданный файл в качестве протокола для восстановления
предыдущего сеанса редактирования. Если дополнительно указан
ключ -silent, процесс восстановления не отображается на экране.
В конце будет выдано сообщение о завершении восстановления.
Процесс можно прервать в любой момент, нажав клавишу <INT>.


-silent
При восстановлении предыдущего сеанса редактирования не
отображать процесс на экране.


-terminal=<тип>
Задает тип терминала, с которым будет работать редактор.
Если ключ не указан, тип берется из переменной окружения TERM.


-vistabs
Отображать текущую разметку табуляций на нижней рамке текущего окна
(см. команду vistabs).
По умолчанию включено.


		   СТАНДАРТНАЯ КЛАВИАТУРА

Здесь описан стандартный набор последовательностей клавиш,
который не зависит от типа конкретного терминала. Этот набор
подключается по умолчанию, или при задании в командной строке
ключа -keyboard=standard или если переменная окружения LEKBD
имеет значение standard до запуска редактора. Данный набор
не использует функциональных клавиш и может применятся к любым
терминалам.

<CMD>       CTRL/@   перейти в командный режим
<TAG>       CTRL/A   поиск определения функции (см. tag)
<BACKTAB>   CTRL/B   сдвиг на табуляцию назад
<INT>       CTRL/C,CTRL/\   прерывание выполнения операции
<MIFILE>    CTRL/D   назад по списку файлов
<MIPAGE>    CTRL/E   назад на страницу
<PLLINE>    CTRL/F   вперед на страницу
<MILINE>    CTRL/G   назад на пол-экрана
<MOVELEFT>  CTRL/H   сдвиг влево
<TAB>       CTRL/I   сдвиг на табуляцию
<1COLUMN>   CTRL/J   сдвиг в первую позицию строки
<MOVEUP>    CTRL/K   сдвиг вверх
<MOVERIGHT> CTRL/L   сдвиг вправо
<RETURN>    CTRL/M   переход в начало сл. строки (и вставка пустой)
<RUS>       CTRL/N   включить русский регистр клавиатуры
<LAT>       CTRL/O   включить латинский регистр клавиатуры
<PICK>      CTRL/P   cкопировать область в pick-буфер (см. pick)
<PLPAGE>    CTRL/R   вперед на страницу
<MEXEC>     CTRL/T<буква>   выполнить макрокоманду с этим именем
<INSCH>     CTRL/U   вставить символ
<CLOSE>     CTRL/V   удалить область (см. close)
<DELCH>     CTRL/W   удалить символ
<MEND>      CTRL/Y   конец макроопределения
<OPEN>      CTRL/Z   вставить область (см. open)
<MOVEDOWN>  CTRL/]   сдвиг вниз
<HOME>      CTRL/^   сдвиг в начало экрана
<MARK>      CTRL/_   пометить

<CTRLQUOTE> CTRL/X-CTRL/A  ввести непечатаемый символ
<SPLIT>     CTRL/X-CTRL/B  разрезать строку
<PLFILE>    CTRL/X-CTRL/D  вперед по списку файлов
<ERASE>     CTRL/X-CTRL/E  очистить область
<ABANDON>   CTRL/X-CTRL/F  отказаться от текущего файла (см. abandon)
<BEGS>      CTRL/X-CTRL/G  в начало строки
<LWINDOW>   CTRL/X-CTRL/H  сдвиг на пол-окна влево
<INSMODE>   CTRL/X-CTRL/I  включить/выключить режим вставки
<JOIN>      CTRL/X-CTRL/J  склеить строки
<ENDS>      CTRL/X-CTRL/K  в конец строки
<RWINDOW>   CTRL/X-CTRL/L  сдвиг на пол-окна вправо
<MISRCH>    CTRL/X-CTRL/M  поиск назад по файлу
<PLSRCH>    CTRL/X-CTRL/P  поиск вперед по файлу
<REPLACE>   CTRL/X-CTRL/R  подтверждение замены
<TABS>      CTRL/X-CTRL/T  установить табуляцию
<LWORD>     CTRL/X-CTRL/U  сдвиг на слово влево
<RWORD>     CTRL/X-CTRL/V  сдвиг на слово вправо
<CHWINDOW>  CTRL/X-CTRL/W  сменить окно
<ROLLUP>    CTRL/X-CTRL/Y  роллировать окно вверх
<ROLLDOWN>  CTRL/X-CTRL/Z  роллировать окно вниз
<MKWIN>     CTRL/X-CTRL/]  создать окно
<CLREOL>    CTRL/X-CTRL/^  очистить до конца строки
<REDRAW>    CTRL/X-CTRL/_  перерисовать экран


		     КОМАНДНЫЙ РЕЖИМ

Команды набираются после нажатия клавишы <CMD> и выполняются после
нажатия клавишы <RETURN>.
Каждая команда при наборе может быть сокращена до нескольких букв,
по которым она все еще будет определяться однозначно.
То же относится и к параметрам.
Далее, везде в описаниях команд '[',']' означают необязательный
параметр, '|' означает выбор варианта, '<','>' означают обязательный
параметр.
Есть следующие типы обязательных параметров:

<n>         - положительное целое число, больше 0.
<действие>  - команда, набираемая нажатием функциональных клавиш.
<диапазон>  - диапазон строк.
	      Может быть задан в командной строке, как <n> или
	      <n>l (число строк), или <n>p (число параграфов).
	      Параграфом считается строка или несколько строк до первой
	      пустой строки или до конца файла.
	      Может отсутствовать в командной строке и задаваться
	      пометкой строк после <MARK>.
<область>   - <диапазон> или прямоугольник.
	      Может быть задан в командной строке, как <n>x<n>.
	      Может отсутствовать в командной строке и задаваться
	      пометкой строк после <MARK>.
<программа> - строка для интерпретатора команд sh
	      (см. документацию sh(1)).
<файл>      - имя файла.
<образец>   - регулярное выражение для поиска
	      (см. документацию ed(1), vi(1)).
<замена>    - строка замены.
<строка>    - любая строка.

Далее в описании некоторых команд встречается понятие буфер.
Буфер это временная рабочая область куда помещается
текст для возможного последующего использования.
Есть следующие типы буферов:
adjust - старый текст (команды center, fill, justify).
close  - удаленный текста (команда close).
erase  - удаленный текста (команда erase).
pick   - запомненный текст (команда pick).
run    - замененный текст (команды run, feed).
Соответствующие команды использования содержимого буфера
работают с последней, попавшей в буфер областью.
Чтобы работать с содержимым предыдущих областей, нужно
использовать псевдофайлы (см. edit):
#p - буфер pick.
#o - буферы adjust, close, erase, run.
Далее следует список всех команд редактора в алфавитном порядке.


<RETURN>
Вернуться из режима ввода команды в режим редактирования.


<строка><действие>
Задание аргумента для тех команд, которые используют <строку>.
Это <PLSRCH>, <MISRCH>, <PLFILE>, <TAG>, <MKWIN>.


<n><действие>
Повторить указанное <действие> <n> раз.
Здесь <действие> - любое кроме <MOVELEFT>, <MOVERIGHT>, <MOVEUP>,
<MOVEDOWN>, <RETURN>, <BEGS>, <ENDS>, <TAB>, <BACKTAB>,
<BACKSPACE>, <DEL>, <DELCH>.


abandon
Исключить текущий файл из списка активных файлов.
См. edit.


binary
-binary
Включить/выключить режим бинарного редактирования. В этом режиме
табуляции не заменяются на пробелы, а также не обрезаются пробелы
в концах строк. Кроме этого, не происходит свертки последовательностей,
содержащих символ возврата на шаг, к какому-либо шрифту (см. font).
Символы табуляции и конца строки выделяются как
управляющие.


blot   adjust | close | erase | pick | run
-blot  adjust | close | erase | pick | run
По команде blot последняя область из указанного буфера помещается поверх
текущего текста, причем позиции, соответствующие печатным символам в буфере,
заполняются пробелами, а остальные не затрагиваются.
Команда -blot работает наоборот: позиции, соответствующие печатным
символам в буфере не затрагиваются, а остальные в текущем тексте
заполняются пробелами.
См. cover, insert, overlay, underlay.


box <область>
Рисует рамку вокруг указанной области символами '+', '|' и '-'.


bye  [ nosave | quit | abort | dump ]
Выход из редактора. Синонимы команды - exit, quit. Ключи задают
различные режимы выхода:
+-----------+--------+-------------+------------------+----------------+
|           | Запись | Запоминание | Уничтожение      | Уничтожение    |
|           | файлов | состояния   | протокола работы | рабочего файла |
+-----------+--------+-------------+------------------+----------------+
|bye        |   X    |      X      |        X         |       X        |
|bye nosave |   -    |      X      |        X         |       X        |
|bye quit   |   -    |      -      |        X         |       X        |
|bye abort  |   -    |      -      |        -         |       X        |
|bye dump   |   -    |      -      |        -         |       -        |
+-----------+--------+-------------+------------------+----------------+
См. inplace, update, save.


call <программа>
Запустить на выполннение указанную системную программу. Допускаются все
конструкции интерпретатора команд sh.
См. shell, run, feed.


center  [ <диапазон> ] [ width=<n> ]
Центрировать диапазон строк, если не указано, то текущую строку.
Можно задать ширину листа оператором width.
Старый текст помещается в буфер adjust.
См. range.


close  [ <область> ]
-close
Команда close удаляет область указанного размера, помещая ее в буфер close,
откуда после ее можно восстановить. Если не область не задана, удаляется
одна строка. Команда -close вставляет в текущий текст последнюю область из
буфера close.


command
-command
Обычно, чтобы работать в командном режиме, надо нажать клавишу <CMD>,
набрать команду и нажать <RETURN>. Команда command переводит в режим,
когда не нужно каждый раз нажимать <CMD>. Чтобы вернуться в обычный
режим, нужно набрать -command.


cover  adjust | close | erase | pick | run
Последняя область из указанного буфера помещается на место текущего
текста.
См. blot, insert, overlay, underlay.


delete
Команда удаляет текущий файл из списка активных файлов, и, при выходе
из редактора с записью, удаляет файл на диске.

edit  [ <файл> ]
Команда переходит к редактированию файла.
Если имя файла не задано, происходит переключение на следующий файл
из списка активных, если задано и файл уже есть в списке активных -
переключение на указанный файл. Если файл отсутствует в списке активных,
он читается с диска, отображается на экране и помещается в текущее место
списка.
См. abandon.


endm
Конец ввода макроопределения. См. macro.


erase  [ <область> ]
-erase
Команда erase заполняет пробелами область указанного размера, помещая ее
содержимое в буфер erase, откуда после ее можно восстановить.
Если область не указана, подразумевается 1 строка.
Команда -erase вставляет последнюю область из буфера erase в
текущее место текста.

exit
См. bye.


feed  [ <диапазон> ] <программа>
Через интерпретатор sh запускается указанная системная программа
и на стандартный ввод ей подается заданный диапазон строк.
После выполнения программы этот диапазон заменяется на содержимое
стандартного вывода и стандартного вывода ошибок программы.
Старый текст помещается в буфер run.
Если диапазон не указан, подразумевается от текущего места и до
конца файла.
См. run.


fill  [ <диапазон> ]  [ width=<n> ]
В указанном диапазоне строк команда располагает на каждой строке как
можно больше слов (без выравнивания). Ключ width задает ширину листа.
Старый текст помещается в буфер adjust.
См. justify, range.


font  italic | romanic | bold
Каманда переключает текущий шрифт набираемого текста. При запуске
включается шрифт romanic (обычный). Шрифт italic (курсив) представляется
внутри файла как '_'<BACKSPACE><буква>, шрифт bold (жирный) -
<буква><BACKSPACE><буква>, так что при просмотре текста программой cat
на экране они не отличаются от обычного, а при печати на принтере
будут выглядеть как подчеркнутые и жирные буквы соответственно.


goto  [ <n> | begin | end | rbegin | rend ]
Быстрый способ переместиться внутри редактируемого файла.
Если не указано параметров или указан begin, происходит перемещение
в начало файла, если указан end - в конец файла.
Если указан номер <n> происходит перемещение на строку с этим
номером. Если указаны rbegin или rend - перемещение в начало или конец
диапазона строк, помеченного командой range.
См. range.


help
Команда выводит на экран файл подсказки и переходит в режим просмотра
файла. Файл подсказки вставляется в текущее место в списке активных
файлов.
См. edit.


horizontal  [ <файл> ]
Команда создает горизонтальное окно и переходит к редактированию
указанного файла, а если не он указан, то текущего.
См. vertical, window, edit.


inplace
-inplace
По умолчанию, при сохранении файла, он переименовывается в <файл>.b,
затем создается новый файл с именем <файл>, куда записывается измененное
содержимое.
Если выполнена команда inplace, все файлы при сохранении записываются
в те же самые, а перед этим старое содержимое копируется в <файл>.b.
Этот режим требует немного больше времени на запись, но зато
позволяет сохранить все ссылки (links) на файл.
Команда -inplace отменяет данный режим.
См. update, bye, save.


insert  adjust | close | erase | pick | run
Команда вставляет содержимое указанного буфера в текущую позицию
в тексте, при этом старый текст сдвигается, чтобы освободить место
для нового.
См. -pick, blot, cover, overlay, underlay.


insmode
-insmode
Команда insmode включает режим вставки (набираемый текст вставляется
в текущую позицию и по нажатию <RETURN> вставляется пустая строка>).
Команда -insmode выключает режим вставки
(набираемый текст затирает старый и по нажатию <RETURN> происходит
только перемещение).


join
-join
Команда join склеивает текущую строку со следующей. Синоним -split.
Команда -join разбивает текущую строку на две. Синоним split.
Если установлен режим offset (по умолчанию), начало второй строки
оказывается под началом текущей, иначе - в первой позиции,
Если помечена текущая область, это учитывается при операции.
См. offset.


justify  [ <диапазон> ]  [ width=<n> ]
В указанном диапазоне строк команда располагает на каждой строке как
можно больше слов. Кроме этого, делается выравнивание по правому краю
вставкой пробелов между словами. Ключ width задает ширину листа.
Старый текст помещается в буфер adjust.
См. также fill, range.


logout
См. bye.


macro <буква>
-macro
<буква> может быть от a до z.
Начало макроопределения с указанным именем.
Все последующие действия запоминаются до ввода команды endm или <MEND>
и воспроизводятся нажатием <MEXEC><буква>.
Выполнение макроподстановки может быть прервано в любое время нажатием
<INT>.
См. endm.


name  <файл>
Поменять имя текущего файла на имя <файл> при выходе из редактора
с записью. Синоним rename.


offset
-offset
По команде offset устанавливается режим, в котором по нажатию <RETURN>
происходит переход в позицию следующей строки, совпадающую с началом текущей
(по умолчанию). По команде -offset переход происходит в первую позицию
текста. Этот режим влияет также на разрезание строк (см. -join).


open  [ <область> ]
Вставляет в текущее место текста область указанного размера, заполненную
пробелами. Если область не задана, вставляется одна строка.


overlay   adjust | close | erase | pick | run
Последняя область из указанного буфера помещается поверх текущего текста,
причем старый текст затирают только отличные от пробела символы из буфера.
См. blot, cover, insert, underlay.


pick  [ <область> ]
-pick
Команда pick копирует содержимое указанной области в буфер pick.
Команда -pick вставляет последнюю область из этого буфера в текущую
позицию текста.
См. insert.


print  [ <диапазон> ]
Печать на принтере указанного диапазона строк. Если диапазон не указан,
то печатается весь файл.
См. range.


quit
См. bye


range  [ <диапазон> ]
-range
?range
Команда устанавливает начало и конец рабочего диапазона строк для команд
поиска <SEARCH>, replace, fill, justify, center, print. Команда -range
отменяет заданный диапазон. Команда ?range сообщает число строк
в заданном диапазоне.


redraw
Очистить экран дисплея и перерисовать весь текст. Эта команда полезна в тех
случаях, когда на экране возникают не относящееся к работе символы
(например, шум по линии или сообщение оператора).


rename
См. name.


replace  [ <диапазон> ]  [ show | interactive ]   /<образец>/<замена>/
-replace  [ <диапазон> ]  [ show | interactive ]   /<образец>/<замена>/
Команда replace ищет вперед по файлу внутри указанного диапазона <образец>
и заменяет его на <замену>. Команда -replace делает то же самое, только
ищет назад по файлу.
Символ-разделитель '/' может быть заменен на любой
не буквенно-цифровой символ (например, если он встречается в <образце>
или <замене>). <образцом> может быть любое регулярное выражение
(см. документацию по ed(1), sed(1), vi(1)).
Выполнение команды может быть прекращено в любое время нажатием <INT>.
Если указан параметр show, то все происходящие замены выдаются на экран.
Если указан interactive, при нахождении образца требуется нажать
<REPLACE> для подтверждения замены и далее можно продолжить поиск,
нажав <PLSRCH>.
См. search, range.


run  [ <диапазон> ]  <программа>
Через интерпретатор sh запускается указанная системная программа
и на стандартный ввод ей подается заданный диапазон строк.
После выполнения программы содержимое
стандартного вывода и стандартного вывода ошибок программы вставляется
в начало диапазона.
Если диапазон не указан, подразумевается пустой диапазон.
Старый текст помещается в буфер run.
См. feed.


save  [ <файл> ]
Текущий файл записывается под именем <файл>, а если не указано, то
под собственным именем. Эта команда позволяет записывать файлы не выходя
из редактора.
См. inplace, update, bye.


search  [ /<образец>/ ]
-search  [ /<образец>/ ]
Команда search ищет вперед по файлу внутри указанного диапазона <образец>
и останавливается в начале найденного текста.
Команда -search делает то же самое, только  ищет назад по файлу.
Символ-разделитель '/' может быть заменен на любой
не буквенно-цифровой символ (например, если он встречается в <образце>).
<образцом> может быть любое регулярное выражение
(см. документацию по ed(1), sed(1), vi(1)).
Если <образец> не указан, используется предыдущий <образец>.
Выполнение команды может быть прекращено в любое время нажатием <INT>.
См. replace, range.


shell
Временный выход в интерпретатор команд sh. Чтобы вернуться в редактор,
нажмите CTRL/D.
См. call, stop.


split
-split
См. join.


stop
Приостановить редактор, используя аппарат управления заданиями из
Berkeley VAX UNIX версий 4.1BSD и выше.
См. shell.


tab  [ <n> ... ]
-tab  [ <n> ... ]
Команда tab устанавливает разметку табуляции в указанных столбцах, а если не
указано, то в текущем столбце. Команда -tab удаляет разметку табуляции,
указанную аналогичным образом.
Если установлен режим vistabs, то все изменения
выдаются в нижней рамке текущего окна.
См. tabs, tabfile, vistabs.


tabfile <файл>
-tabfile <файл>
Команда tabfile устанавливает разметку табуляций из <файла>.
Команда -tabfile отменяет разметку табуляций из <файла>.
Формат <файла> прост: номера столбцов разметки, разделенные пробелами.
Если установлен режим vistabs, то все изменения
выдаются в нижней рамке текущего окна.
См. tabs, tab, vistabs.


tabs  <n>
-tabs  [ <n> ]
Команда tabs устанавливает разметку табуляций с шагом <n>.
Команда -tab удаляет разметку табуляции с шагом <n>, а если не указано,
то всю разметку.
Если установлен режим vistabs, то все изменения
выдаются в нижней рамке текущего окна.
См. tab, tabfile, vistabs.


tag  <строка>
Встает на определение данной функции, переключаясь на соответствующий
файл. Для этого используется информация об определениях из файла tags.
(см. документацию по ctags(1), vi(1)).


track
-track
Команда track включает в текущем окне режим, когда все активные файлы,
во всех окнах и скрытые, перемещаются относительно окон вместе с текущим
файлом.
Обычно, этот режим используется для визуального сравнения содержимого
нескольких файлов.
Команда -track выключает этот режим.


underlay   adjust | close | erase | pick | run
Последняя область из указанного буфера помещается под текущий текст,
т.е символы из буфера заменяют только пробелы в старом тексте.
См. blot, cover, insert, overlay.


update  [ inplace | -inplace ]
-update
Команда update указывает, как записывать текущий файл
с сохранением ссылок (inplace) или без (-inplace).
Команда -update отменяет запись каких-либо изменений в текущем файле.
См. inplace, bye, save.


vertical  [ <файл> ]
Команда создает вертикальное окно и переходит к редактированию
указанного файла, а если не он указан, то текущего.
См. horizontal, window, edit.


vistabs
-vistabs
Команда vistabs включает режим, когда разметка табуляций текущего файла
отображается символами '+' на нижней рамке активного окна (по умолчанию).
Команда -vistabs отменяет данный режим.
См. tab, tabfile, tabs.


window  [ <файл> ]
-window
Команда window определяет к какой рамке ближе находится курсор,
и в зависимости от этого создает горизонтальное или
вертикальное окно и переходит к редактированию
указанного файла, а если не он указан, то текущего.
Команда -window уничтажает последнее созданное окно.
См. horizontal, vertical, edit.
